#ifndef TABLES_H
#define TABLES_H
/*
Will contain the various masks and tables needed
    The binary values of the bitboards will be converted from hex
*/

#include "types.h"

namespace Tables
{
    
    //Rank and file system of chess
    //RANK (ROW AND NUMBERS)
    //FILE (COLUMN AND LETTERS)
    /*
    A8	B8	C8	D8	E8	F8	G8	H8
    A7	B7	C7	D7	E7	F7	G7	H7
    A6	B6	C6	D6	E6	F6	G6	H6
    A5	B5	C5	D5	E5	F5	G5	H5
    A4	B4	C4	D4	E4	F4	G4	H4
    A3	B3	C3	D3	E3	F3	G3	H3
    A2	B2	C2	D2	E2	F2	G2	H2
    A1	B1	C1	D1	E1	F1	G1	H1
    */
    //For our representation, 
    //A1 will represent the Least Significant Bit (LSB) and
    //H8 will represent the Most Significant Bit (MSB)
    //We will wrap from left to right/ bottom to top.

    const U64 MASK_RANK[] = { 
        0xFF,
        0xFF00,
        0xFF0000,
        0xFF000000,
        0xFF00000000,
        0xFF0000000000,
        0xFF000000000000,
        0xFF00000000000000
    };
    /*  
    Mask rank 1: 0000000000000000000000000000000000000000000000000000000011111111
    Mask rank 2: 0000000000000000000000000000000000000000000000001111111100000000
    Mask rank 3: 0000000000000000000000000000000000000000111111110000000000000000
    Mask rank 4: 0000000000000000000000000000000011111111000000000000000000000000
    Mask rank 5: 0000000000000000000000001111111100000000000000000000000000000000
    Mask rank 6: 0000000000000000111111110000000000000000000000000000000000000000
    Mask rank 7: 0000000011111111000000000000000000000000000000000000000000000000
    Mask rank 8: 1111111100000000000000000000000000000000000000000000000000000000
    */
    const U64 MASK_FILE[] = { 
        0x0101010101010101,
        0x202020202020202,
        0x404040404040404,
        0x808080808080808,
        0x1010101010101010,
        0x2020202020202020,
        0x4040404040404040,
        0x8080808080808080
    };
    /*  
    Mask file A: 0000000100000001000000010000000100000001000000010000000100000001
    Mask file B: 0000001000000010000000100000001000000010000000100000001000000010
    Mask file C: 0000010000000100000001000000010000000100000001000000010000000100
    Mask file D: 0000100000001000000010000000100000001000000010000000100000001000
    Mask file E: 0001000000010000000100000001000000010000000100000001000000010000    
    Mask file F: 0010000000100000001000000010000000100000001000000010000000100000
    Mask file G: 0100000001000000010000000100000001000000010000000100000001000000
    Mask file H: 1000000010000000100000001000000010000000100000001000000010000000
    */
    const U64 CLEAR_RANK[] = { 
        0xFFFFFFFFFFFFFF00,
        0xFFFFFFFFFFFF00FF,
        0xFFFFFFFFFF00FFFF,
        0xFFFFFFFF00FFFFFF,
        0xFFFFFF00FFFFFFFF,
        0xFFFF00FFFFFFFFFF,
        0xFF00FFFFFFFFFFFF,
        0x00FFFFFFFFFFFFFF
    };

    /*
    Clear rank 1: 1111111111111111111111111111111111111111111111111111111100000000
    Clear rank 2: 1111111111111111111111111111111111111111111111110000000011111111
    Clear rank 3: 1111111111111111111111111111111111111111000000001111111111111111
    Clear rank 4: 1111111111111111111111111111111100000000111111111111111111111111
    Clear rank 5: 1111111111111111111111110000000011111111111111111111111111111111
    Clear rank 6: 1111111111111111000000001111111111111111111111111111111111111111
    Clear rank 7: 1111111100000000111111111111111111111111111111111111111111111111
    Clear rank 8: 0000000011111111111111111111111111111111111111111111111111111111
    */

    const U64 CLEAR_FILE[] = { 
        0xFEFEFEFEFEFEFEFE,
        0xFDFDFDFDFDFDFDFD,
        0xFBFBFBFBFBFBFBFB,
        0xF7F7F7F7F7F7F7F7,
        0xEFEFEFEFEFEFEFEF,
        0xDFDFDFDFDFDFDFDF,
        0xBFBFBFBFBFBFBFBF,
        0x7F7F7F7F7F7F7F7F
    };
    /*
    Clear file A: 1111111011111110111111101111111011111110111111101111111011111110
    Clear file B: 1111110111111101111111011111110111111101111111011111110111111101
    Clear file C: 1111101111111011111110111111101111111011111110111111101111111011
    Clear file D: 1111011111110111111101111111011111110111111101111111011111110111
    Clear file E: 1110111111101111111011111110111111101111111011111110111111101111
    Clear file F: 1101111111011111110111111101111111011111110111111101111111011111
    Clear file G: 1011111110111111101111111011111110111111101111111011111110111111
    Clear file H: 0111111101111111011111110111111101111111011111110111111101111111
    */
   
    /*Beginning positions of the pieces.*/

}
#endif TABLES_H

